//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIL.Transcelerator.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SIL.Transcelerator.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap _1321382935_plus {
            get {
                object obj = ResourceManager.GetObject("_1321382935_plus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap _1321385905_dialog_close {
            get {
                object obj = ResourceManager.GetObject("_1321385905_dialog_close", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap _1330980033_search_button {
            get {
                object obj = ResourceManager.GetObject("_1330980033_search_button", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap check_circle {
            get {
                object obj = ResourceManager.GetObject("check_circle", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Copy {
            get {
                object obj = ResourceManager.GetObject("Copy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Filtered {
            get {
                object obj = ResourceManager.GetObject("Filtered", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Answers:.
        /// </summary>
        internal static string kstidAnswersLabel {
            get {
                return ResourceManager.GetString("kstidAnswersLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comments:.
        /// </summary>
        internal static string kstidCommentsLabel {
            get {
                return ResourceManager.GetString("kstidCommentsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} - Copy{1}.
        /// </summary>
        internal static string kstidCopiedSelectionRuleNameTemplate {
            get {
                return ResourceManager.GetString("kstidCopiedSelectionRuleNameTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}. All rights reserved. Distributable under the terms of either the Common Public License or the GNU Lesser General Public License..
        /// </summary>
        internal static string kstidCopyrightFmt {
            get {
                return ResourceManager.GetString("kstidCopyrightFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Rendering Selection Rule.
        /// </summary>
        internal static string kstidEditRuleCaption {
            get {
                return ResourceManager.GetString("kstidEditRuleCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required file not found:
        ///.
        /// </summary>
        internal static string kstidFileNotFound {
            get {
                return ResourceManager.GetString("kstidFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filtered.
        /// </summary>
        internal static string kstidFilteredStatus {
            get {
                return ResourceManager.GetString("kstidFilteredStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This rule can be saved but will not be used until the error is fixed. Would you like to fix it now?.
        /// </summary>
        internal static string kstidFixConditionNow {
            get {
                return ResourceManager.GetString("kstidFixConditionNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Generate Checking Script Template....
        /// </summary>
        internal static string kstidGenerateTemplateMenuText {
            get {
                return ResourceManager.GetString("kstidGenerateTemplateMenuText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web Page.
        /// </summary>
        internal static string kstidHtml {
            get {
                return ResourceManager.GetString("kstidHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid condition for determining when rule applies..
        /// </summary>
        internal static string kstidInvalidQuestionCondition {
            get {
                return ResourceManager.GetString("kstidInvalidQuestionCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regular Expression Invalid.
        /// </summary>
        internal static string kstidInvalidRegularExpressionCaption {
            get {
                return ResourceManager.GetString("kstidInvalidRegularExpressionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid condition for determining which rendering to select..
        /// </summary>
        internal static string kstidInvalidRenderingCondition {
            get {
                return ResourceManager.GetString("kstidInvalidRenderingCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Question-matching pattern must have a place holder for the key term..
        /// </summary>
        internal static string kstidKeyTermPlaceHolderMissing {
            get {
                return ResourceManager.GetString("kstidKeyTermPlaceHolderMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lectionary Control File.
        /// </summary>
        internal static string kstidLectionaryControlFile {
            get {
                return ResourceManager.GetString("kstidLectionaryControlFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transcelerator uses a biblical terms list from Paratext in order to identify terms in the comprehension checking questions that can be translated automatically. Although it can theoretically work with any list, it is tuned to work best with the &quot;{0}&quot; list. The project {1} is currently associated with the &quot;{2}&quot; list. If you continue to use this list and find that Transcelerator has identified too many or too few words in the questions as key terms, change your project to use the &quot;{0}&quot; list, and then on the F [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string kstidMajorBiblicalTermsPreferred {
            get {
                return ResourceManager.GetString("kstidMajorBiblicalTermsPreferred", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selection Rule - {0}.
        /// </summary>
        internal static string kstidNewSelectionRuleNameTemplate {
            get {
                return ResourceManager.GetString("kstidNewSelectionRuleNameTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rendering already exists.
        /// </summary>
        internal static string kstidRenderingExists {
            get {
                return ResourceManager.GetString("kstidRenderingExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the biblical term in the original question {0}, then select the first vernacular rendering that {1}..
        /// </summary>
        internal static string kstidRenderingSelectionConditionResultFrame {
            get {
                return ResourceManager.GetString("kstidRenderingSelectionConditionResultFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to matches the regular expression &quot;{0}&quot;.
        /// </summary>
        internal static string kstidRenderingSelectionCriteriaCustom {
            get {
                return ResourceManager.GetString("kstidRenderingSelectionCriteriaCustom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ends with {0}.
        /// </summary>
        internal static string kstidRenderingSelectionCriteriaEndsWith {
            get {
                return ResourceManager.GetString("kstidRenderingSelectionCriteriaEndsWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to starts with {0}.
        /// </summary>
        internal static string kstidRenderingSelectionCriteriaStartsWith {
            get {
                return ResourceManager.GetString("kstidRenderingSelectionCriteriaStartsWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to matches the regular expression &quot;{0}&quot;.
        /// </summary>
        internal static string kstidRenderingSelectionRuleQuestionConditionCustom {
            get {
                return ResourceManager.GetString("kstidRenderingSelectionRuleQuestionConditionCustom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ends with {0}.
        /// </summary>
        internal static string kstidRenderingSelectionRuleQuestionConditionEndsWith {
            get {
                return ResourceManager.GetString("kstidRenderingSelectionRuleQuestionConditionEndsWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to is immediately followed by {0}.
        /// </summary>
        internal static string kstidRenderingSelectionRuleQuestionConditionFollowedBy {
            get {
                return ResourceManager.GetString("kstidRenderingSelectionRuleQuestionConditionFollowedBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to is immediately preceded by {0}.
        /// </summary>
        internal static string kstidRenderingSelectionRuleQuestionConditionPrecededBy {
            get {
                return ResourceManager.GetString("kstidRenderingSelectionRuleQuestionConditionPrecededBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to starts with {0}.
        /// </summary>
        internal static string kstidRenderingSelectionRuleQuestionConditionStartsWith {
            get {
                return ResourceManager.GetString("kstidRenderingSelectionRuleQuestionConditionStartsWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This name is already in use by another rule..
        /// </summary>
        internal static string kstidRuleNameInUse {
            get {
                return ResourceManager.GetString("kstidRuleNameInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name is required..
        /// </summary>
        internal static string kstidRuleNameRequired {
            get {
                return ResourceManager.GetString("kstidRuleNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing....
        /// </summary>
        internal static string kstidSplashMsgInitializing {
            get {
                return ResourceManager.GetString("kstidSplashMsgInitializing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading questions....
        /// </summary>
        internal static string kstidSplashMsgLoadingQuestions {
            get {
                return ResourceManager.GetString("kstidSplashMsgLoadingQuestions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading translations....
        /// </summary>
        internal static string kstidSplashMsgLoadingTranslations {
            get {
                return ResourceManager.GetString("kstidSplashMsgLoadingTranslations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving data from {0}....
        /// </summary>
        internal static string kstidSplashMsgRetrievingDataFromCaller {
            get {
                return ResourceManager.GetString("kstidSplashMsgRetrievingDataFromCaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template &amp;File name:.
        /// </summary>
        internal static string kstidTemplateFileNameLabel {
            get {
                return ResourceManager.GetString("kstidTemplateFileNameLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template generation complete!.
        /// </summary>
        internal static string kstidTemplateGenerationComplete {
            get {
                return ResourceManager.GetString("kstidTemplateGenerationComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are {0} questions in the selected range that do not have confirmed translations. Do you want to continue? (Untranslated questions will be excluded.).
        /// </summary>
        internal static string kstidUntranslatedQuestionsWarning {
            get {
                return ResourceManager.GetString("kstidUntranslatedQuestionsWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User-added question with no English version.
        /// </summary>
        internal static string kstidUserAddedEmptyPhrase {
            get {
                return ResourceManager.GetString("kstidUserAddedEmptyPhrase", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Paste {
            get {
                object obj = ResourceManager.GetObject("Paste", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Transcelerator {
            get {
                object obj = ResourceManager.GetObject("Transcelerator", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap wait22trans {
            get {
                object obj = ResourceManager.GetObject("wait22trans", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
