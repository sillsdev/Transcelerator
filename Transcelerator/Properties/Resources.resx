<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="kstidInvalidRegularExpressionCaption" xml:space="preserve">
    <value>Regular Expression Invalid</value>
  </data>
  <data name="kstidRenderingSelectionCriteriaCustom" xml:space="preserve">
    <value>matches the regular expression "{0}"</value>
  </data>
  <data name="kstidRenderingSelectionCriteriaStartsWith" xml:space="preserve">
    <value>starts with {0}</value>
  </data>
  <data name="kstidInvalidRenderingCondition" xml:space="preserve">
    <value>Invalid condition for determining which rendering to select.</value>
  </data>
  <data name="kstidFixConditionNow" xml:space="preserve">
    <value>This rule can be saved but will not be used until the error is fixed. Would you like to fix it now?</value>
  </data>
  <data name="kstidRenderingSelectionConditionResultFrame" xml:space="preserve">
    <value>When the biblical term in the original question {0}, then select the first vernacular rendering that {1}.</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Filtered" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Filtered.bmp;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="kstidRuleNameRequired" xml:space="preserve">
    <value>Name is required.</value>
  </data>
  <data name="kstidRenderingSelectionRuleQuestionConditionEndsWith" xml:space="preserve">
    <value>ends with {0}</value>
  </data>
  <data name="kstidRenderingSelectionRuleQuestionConditionCustom" xml:space="preserve">
    <value>matches the regular expression "{0}"</value>
  </data>
  <data name="kstidRenderingSelectionCriteriaEndsWith" xml:space="preserve">
    <value>ends with {0}</value>
  </data>
  <data name="kstidRenderingSelectionRuleQuestionConditionFollowedBy" xml:space="preserve">
    <value>is immediately followed by {0}</value>
  </data>
  <data name="kstidNewSelectionRuleNameTemplate" xml:space="preserve">
    <value>Selection Rule - {0}</value>
  </data>
  <data name="kstidTemplateGenerationComplete" xml:space="preserve">
    <value>Template generation complete!</value>
  </data>
  <data name="kstidUserAddedEmptyPhrase" xml:space="preserve">
    <value>User-added question with no English version</value>
  </data>
  <data name="kstidKeyTermPlaceHolderMissing" xml:space="preserve">
    <value>Question-matching pattern must have a place holder for the key term.</value>
  </data>
  <data name="kstidUntranslatedQuestionsWarning" xml:space="preserve">
    <value>There are {0} questions in the selected range that do not have confirmed translations. Do you want to continue? (Untranslated questions will be excluded.)</value>
  </data>
  <data name="kstidRenderingSelectionRuleQuestionConditionPrecededBy" xml:space="preserve">
    <value>is immediately preceded by {0}</value>
  </data>
  <data name="kstidFilteredStatus" xml:space="preserve">
    <value>Filtered</value>
  </data>
  <data name="kstidEditRuleCaption" xml:space="preserve">
    <value>Edit Rendering Selection Rule</value>
  </data>
  <data name="Copy" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Copy.bmp;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="kstidInvalidQuestionCondition" xml:space="preserve">
    <value>Invalid condition for determining when rule applies.</value>
  </data>
  <data name="kstidRenderingSelectionRuleQuestionConditionStartsWith" xml:space="preserve">
    <value>starts with {0}</value>
  </data>
  <data name="kstidRuleNameInUse" xml:space="preserve">
    <value>This name is already in use by another rule.</value>
  </data>
  <data name="kstidCopiedSelectionRuleNameTemplate" xml:space="preserve">
    <value>{0} - Copy{1}</value>
    <comment>Parameter 0 is the original rule name; Parameter 1 is an optional numeric suffix to prevent duplicates (if needed)</comment>
  </data>
  <data name="check_circle" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>check-circle.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="kstidCopyrightFmt" xml:space="preserve">
    <value>{0}. All rights reserved. Distributable under the terms of either the Common Public License or the GNU Lesser General Public License.</value>
    <comment>Displays in the Help/About box and the splash screen</comment>
  </data>
  <data name="kstidCommentsLabel" xml:space="preserve">
    <value>Comments:</value>
  </data>
  <data name="kstidRenderingExists" xml:space="preserve">
    <value>Rendering already exists</value>
  </data>
  <data name="kstidAnswersLabel" xml:space="preserve">
    <value>Answers:</value>
  </data>
  <data name="Paste" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Paste.bmp;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="_1321382935_plus" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>1321382935_plus.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="_1321385905_dialog_close" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>1321385905_dialog-close.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="_1330980033_search_button" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>1330980033_search_button.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="wait22trans" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>wait22trans.gif;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Transcelerator" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Transcelerator.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="kstidSplashMsgInitializing" xml:space="preserve">
    <value>Initializing...</value>
  </data>
  <data name="kstidSplashMsgLoadingQuestions" xml:space="preserve">
    <value>Loading questions...</value>
  </data>
  <data name="kstidSplashMsgLoadingTranslations" xml:space="preserve">
    <value>Loading translations...</value>
  </data>
  <data name="kstidSplashMsgRetrievingDataFromCaller" xml:space="preserve">
    <value>Retrieving data from {0}...</value>
  </data>
  <data name="kstidGenerateTemplateMenuText" xml:space="preserve">
    <value>&amp;Generate Checking Script Template...</value>
  </data>
  <data name="kstidTemplateFileNameLabel" xml:space="preserve">
    <value>Template &amp;File name:</value>
  </data>
  <data name="kstidHtml" xml:space="preserve">
    <value>Web Page</value>
  </data>
  <data name="kstidLectionaryControlFile" xml:space="preserve">
    <value>Lectionary Control File</value>
  </data>
  <data name="kstidSplashMsgParsingQuestions" xml:space="preserve">
    <value>Processing questions using Major Biblical Terms list...</value>
  </data>
</root>